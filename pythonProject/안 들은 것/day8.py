# 리스트 : 여러 값을 하나의 변수에 저장 !!!!
#1.선언[만들기]
카트=["사과","딸기","수박"]
#2.출력
print("리스트내 값 들 : " , 카트)
#3.추가
카트.append("포도")
#4.접근[ 하나의 값 ]
print( "첫번째 값은 : ", 카트[0] )
#5.접근[ 여러개 접근 : 슬라이싱 ]
print( "두번째 값부터 세번째 값 ", 카트[1:3])
#6.리스트의 이동
장바구니 = 카트
print( "대입후 ",장바구니)
#7. 리스트의 변경
카트[0] = "Apple"
print( "변경후 ",카트)
#8. 리스트의 삽입
카트.insert( 1 , "참외")
print( "삽입후 " , 카트)
#9. 리스트의 삭제
카트.remove("수박")
print( "수박 삭제 후 :" , 카트)
del 카트[0]
print( "0번 인덱스 삭제 후 ",카트)
카트.pop()
print( "가장 뒤에있는 값 삭제 ", 카트)


# 리스트를 이용한 틱택토 만들기 [ 주석처리 ]
import random #난수 파일 불러오기 => 난수 함수 사용가능
게임판 = [" "," "," "," "," "," "," "," "," "] #인덱스  0부터8까지의 공백으로 선언
########################게임판 출력 #############################
#게임판 출력
print("----------------")
for i in range( 9 ) : # i변수는 0부터 8 까지 반복
    print( 게임판[i] , end="  |  " )
    if i%3 == 2 : # 나누기 3했을때 나머지가 2 면
        print() #줄바꿈
        print("----------------")
###########################게임 실행 ##################################
while True : # 계속 반복하기 #추가2
############################사용자 ##################################
    while True : #입력을 성공할때까지 반복
        #추가1 : 사용자에게 입력받기
        선택 = int( input( " 사용자 위치선택[0~8] : " ) ) #입력받기
        #추가3 : 이미 둔 자리에는 다시 둘수 없음
        #추가5 :  X 혹은 O 가 있으면 둘수 없음
        if 게임판[선택] == "X" or 게임판[선택]=="O" : # 선택한 곳이 이미 X 혹은 O 이면
            print("[불가능]이미 둔 자리 입니다 ")
            continue # 반복문 다시 실행
        else : # 이미 둔 곳이 아니면
            게임판[선택] = "X" #입력한 자리에 X로 변경
            break # 반복문 탈출
#############################컴퓨터###################################
    while True : #입력을 성공할때까지 반복
        #추가4
        난수 = random.randint( 0 , 8 ) # 0부터 8까지의 난수 생성
        #추가5
        if 게임판[난수] == "X" or 게임판[난수]=="O" : # 난수의 위치가 이미 X 혹은 O 이면
            continue # 반복문 다시 실행
        else: # 이미 둔 곳이 아니면
            게임판[난수] = "O" # 생성된 난수 위치에 O로 변경
            break # 반복문 탈출
########################게임판 출력 #############################
    #게임판 출력
    print("----------------")
    for i in range( 9 ) : # i변수는 0부터 8 까지 반복
        print( 게임판[i] , end="  |  " )
        if i%3 == 2 : # 나누기 3했을때 나머지가 2 면
            print() #줄바꿈
            print("----------------")
###########################가로로 이기는 조건 ###################################
    if 게임판[0] == 게임판[1] and 게임판[1]==게임판[2] : # 인덱스 0 , 1  , 2 값이 모두 동일하면
        승리 = 게임판[0] #승리변수에 승리한 모양 넣기
    if 게임판[3]==게임판[4] and 게임판[4]==게임판[5] : # 인덱스 3 , 4 , 5 값이 모두 동일하면
        승리 = 게임판[3] #승리변수에 승리한 모양 넣기
    if 게임판[6]==게임판[7] and 게임판[7]==게임판[8] : # 인덱스 6 , 7 , 8 값이 모두 동일하면
        승리 = 게임판[6] # 승리변수에 승리한 모양 넣기
###########################세로로 이기는 조건 ###################################
    if 게임판[0] == 게임판[3] and 게임판[3] == 게임판[6] : # 인덱스 0 , 3  , 6 값이 모두 동일하면
        승리 = 게임판[0]  # 승리변수에 승리한 모양 넣기
    if 게임판[1] == 게임판[4] and 게임판[4]==게임판[7] : # 인덱스 1 , 4  , 5 값이 모두 동일하면
        승리 = 게임판[1]  # 승리변수에 승리한 모양 넣기
    if 게임판[2] == 게임판[5] and 게임판[5]==게임판[8] : # 인덱스 2 , 5  , 8 값이 모두 동일하면
        승리 = 게임판[2]  # 승리변수에 승리한 모양 넣기
###########################대각선로 이기는 조건 ###################################
    if 게임판[0] == 게임판[4] and 게임판[4] == 게임판[8] : # 인덱스 0 ,4   , 8 값이 모두 동일하면
        승리 = 게임판[0] # 승리변수에 승리한 모양 넣기
    if 게임판[2] == 게임판[4] and 게임판[4] == 게임판[6] : # 인덱스 2 ,4   , 6 값이 모두 동일하면
        승리 = 게임판[2] # 승리변수에 승리한 모양 넣기
############################승리자가 존재하면 게임 끝 #######################################
    if 승리 == "X" : # 승리가 x 이면
        print(" 사용자 승리 ") # 사용자 승리 출력
        break # 게임 종료
    if 승리 == "O" : # 승리가 O 이면
        print(" 컴퓨터 승리 ") # 컴퓨터 승리 출력
        break # 게임 종료

















